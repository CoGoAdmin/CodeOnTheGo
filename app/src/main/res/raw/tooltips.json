[
  {
    "word": "import",
    "description_short": "<p><code>import</code> declares a Java class to use in the code below the import statement.</p>",
    "description_long": "<p>After a Java class is declared, the class name can be used in the code without specifying the package that the class belongs to.</p>",
    "description_full": "Learn more about import and other Java keywords<p>file:///android_asset/idetooltips/java_keywords.html#import"
  },
  {
    "word": "tasks",
    "description_short": "Bundling data with methods",
    "description_long": "Encapsulation refers to the bundling of data with the methods that operate on that data.",
    "description_full": "<p>Encapsulation is a mechanism of restricting access to some of an object's components and only allowing manipulation of the object in ways the designer intended.</p>"
  },
  {
    "word": "delete",
    "description_short": "Acquiring properties of parent class",
    "description_long": "Inheritance is a mechanism where a class inherits properties and behaviors from a parent class.",
    "description_full": "<p>Inheritance allows for the creation of a new class that reuses, extends, or modifies the behavior defined in a parent class.</p>"
  },
  {
    "word": "rootProject",
    "description_short": "Hiding complexity",
    "description_long": "Abstraction is the concept of hiding the complex implementation details and showing only essential features of an object.",
    "description_full": "<p>Abstraction allows programmers to reduce complexity and increase efficiency by working with higher-level concepts.</p>"
  }
]
