// Generated by view binder compiler. Do not edit!
package com.github.appintro.databinding;

import android.gesture.GestureOverlayView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.github.appintro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppintroIntroLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton back;

  @NonNull
  public final ConstraintLayout background;

  @NonNull
  public final View bottom;

  @NonNull
  public final View bottomSeparator;

  @NonNull
  public final Button done;

  @NonNull
  public final FrameLayout indicatorContainer;

  @NonNull
  public final ImageButton next;

  @NonNull
  public final GestureOverlayView pagerGestureOverlay;

  @NonNull
  public final Button skip;

  @NonNull
  public final ViewPager2 viewPager;

  private AppintroIntroLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton back,
      @NonNull ConstraintLayout background, @NonNull View bottom, @NonNull View bottomSeparator,
      @NonNull Button done, @NonNull FrameLayout indicatorContainer, @NonNull ImageButton next,
      @NonNull GestureOverlayView pagerGestureOverlay, @NonNull Button skip,
      @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.back = back;
    this.background = background;
    this.bottom = bottom;
    this.bottomSeparator = bottomSeparator;
    this.done = done;
    this.indicatorContainer = indicatorContainer;
    this.next = next;
    this.pagerGestureOverlay = pagerGestureOverlay;
    this.skip = skip;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppintroIntroLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppintroIntroLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.appintro_intro_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppintroIntroLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      ImageButton back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      ConstraintLayout background = (ConstraintLayout) rootView;

      id = R.id.bottom;
      View bottom = ViewBindings.findChildViewById(rootView, id);
      if (bottom == null) {
        break missingId;
      }

      id = R.id.bottom_separator;
      View bottomSeparator = ViewBindings.findChildViewById(rootView, id);
      if (bottomSeparator == null) {
        break missingId;
      }

      id = R.id.done;
      Button done = ViewBindings.findChildViewById(rootView, id);
      if (done == null) {
        break missingId;
      }

      id = R.id.indicator_container;
      FrameLayout indicatorContainer = ViewBindings.findChildViewById(rootView, id);
      if (indicatorContainer == null) {
        break missingId;
      }

      id = R.id.next;
      ImageButton next = ViewBindings.findChildViewById(rootView, id);
      if (next == null) {
        break missingId;
      }

      id = R.id.pager_gesture_overlay;
      GestureOverlayView pagerGestureOverlay = ViewBindings.findChildViewById(rootView, id);
      if (pagerGestureOverlay == null) {
        break missingId;
      }

      id = R.id.skip;
      Button skip = ViewBindings.findChildViewById(rootView, id);
      if (skip == null) {
        break missingId;
      }

      id = R.id.view_pager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new AppintroIntroLayoutBinding((ConstraintLayout) rootView, back, background, bottom,
          bottomSeparator, done, indicatorContainer, next, pagerGestureOverlay, skip, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
